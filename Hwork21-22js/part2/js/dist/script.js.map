{"version":3,"sources":["../src/script.js"],"names":[],"mappings":";;;AACA,IAAI,YAAY,CACX;AACC,WAAO,uEADR;AAEC,aAAS,CAAC,SAAD,EAAW,aAAX,EAAyB,UAAzB,CAFV;AAGI,aAAS;AAHb,CADW,EAMX;AACC,WAAO,6DADR;AAEC,aAAS,CAAC,gCAAD,EAAkC,mCAAlC,EAAsE,8DAAtE,CAFV;AAGI,aAAS;AAHb,CANW,EAWX;AACC,WAAO,wEADR;AAEC,aAAS,CAAC,4EAAD,EAA8E,+EAA9E,EAA8J,0EAA9J,CAFV;AAGI,aAAS;AAHb,CAXW,CAAhB;;AAkBA,EAAE,YAAW;;;AAGb,iBAAa,OAAb,CAAqB,MAArB,EAA6B,KAAK,SAAL,CAAe,SAAf,CAA7B;;AAEA,QAAI,OAAO,aAAa,OAAb,CAAqB,MAArB,CAAX;AACA,WAAO,KAAK,KAAL,CAAW,IAAX,CAAP;;;;AAIA,QAAI,OAAO,EAAE,YAAF,EAAgB,IAAhB,EAAX;AACA,QAAI,aAAa,EAAE,QAAF,CAAW,IAAX,CAAjB;;AAEA,cAAU,OAAV,CAAkB,UAAU,IAAV,EAAgB,CAAhB,EAAmB;;AAEpC,aAAK,aAAL,GAAqB,CAArB;;AAEA,YAAI,OAAO,WAAW,IAAX,CAAX;AACA,UAAE,WAAF,EAAe,MAAf,CAAsB,IAAtB;AACA,KAND;;;AASA,MAAE,kBAAF,EAAsB,KAAtB,CAA4B,UAAU,IAAV,EAAgB;;AAE1C,YAAI,aAAa,EAAE,WAAF,EAAe,cAAf,EAAjB,C;;AAEA,gBAAQ,GAAR,CAAY,UAAZ;;AAEA,aAAK,cAAL,G;;AAEE,mBAAW,OAAX,CAAmB,UAAU,IAAV,EAAgB,CAAhB,EAAmB;;AAErC,gBAAI,SAAS,KAAK,KAAK,IAAV,CAAb;AACA,sBAAU,OAAO,aAAjB,EAAgC,MAAhC,GAA0C,OAAO,OAAP,IAAkB,KAAK,KAAxB,GAAiC,IAAjC,GAAwC,KAAjF,C;AACA,SAJD;;AAMA,YAAI,YAAY,IAAhB;;;AAGA,kBAAU,OAAV,CAAkB,UAAU,IAAV,EAAgB,KAAhB,EAAuB;AACxC,oBAAQ,KAAK,MAAb;AACG,qBAAK,IAAL;AACE,yBAAK,MAAL,GAAc,WAAd;AACA;AACF,qBAAK,KAAL;AACE,yBAAK,MAAL,GAAc,aAAd;AACA,gCAAY,KAAZ;AACA;AACF,qBAAK,SAAL;AACE,yBAAK,MAAL,GAAc,mBAAd;AACA,gCAAY,KAAZ;AACA;AAXL;;AAcC,gBAAI,aAAa,EAAE,cAAF,EAAkB,IAAlB,EAAjB;AACD,gBAAI,mBAAmB,EAAE,QAAF,CAAW,UAAX,CAAvB;AACC,gBAAI,OAAO,iBAAiB,IAAjB,CAAX;;AAEA,cAAE,oBAAF,EAAwB,MAAxB,CAA+B,IAA/B;AACD,SApBD;;AAsBA,YAAI,OAAQ,SAAD,GAAc,gDAAd,GAAiE,kDAA5E;AACA,UAAE,sBAAF,EAA0B,MAA1B,CAAiC,IAAjC;AACA,UAAE,QAAF,EAAY,IAAZ;AACH,KA1CD;;;AA6CA,MAAE,QAAF,EAAY,KAAZ,CAAkB,YAAY;AAC9B,UAAE,QAAF,EAAY,IAAZ;AACI,iBAAS,MAAT;AACH,KAHD;AAIC,CAvED","file":"script.js","sourcesContent":["// данные\r\nvar questions = [\r\n\t    {\r\n\t    \ttitle: '1.Выберите правильный метод для преобразования объекта в JSON формат:',\r\n\t    \tanswers: ['parse()','stringify()','toJSON()'],\r\n        \tcorrect: 1\r\n\t    },\r\n\t    {\r\n\t    \ttitle: '2.Для чего используется конструкция try-catch в javascript?',\r\n\t    \tanswers: ['Для обработки возможных ошибок','Для замены условного оператора if','В строгом режиме весь код необходимо оборачивать в try-catch'],\r\n        \tcorrect: 0\r\n\t    },\r\n\t    {\r\n\t    \ttitle: '3.Какие основное ограничения к объявлению переменных в строгом режиме?',\r\n\t    \tanswers: ['Переменные функций должны объявляться с использованием ключевого слова var','Глобальные переменные должны объявляться с использованием ключевого слова var','Любая переменная должна объявляться с использованием ключевого слова var'],\r\n        \tcorrect: 2\r\n\t    },\t   \r\n]\r\n\r\n$(function() {\r\n\r\n// запись localStorage\r\nlocalStorage.setItem('form', JSON.stringify(questions));\r\n\r\nlet form = localStorage.getItem('form');\r\nform = JSON.parse(form);\r\n// console.log(form);\r\n\r\n// заполнение html DOM елементами\r\nlet tmpl = $('#form-tmpl').html();\r\nlet tmplInsert = _.template(tmpl);\r\n\r\nquestions.forEach(function (item, i) {\r\n\r\n\titem.questionIndex = i;\r\n\r\n\tlet html = tmplInsert(item);\r\n\t$('.test-box').append(html);\r\n});\r\n\r\n// Проверка правильности ответов\r\n$('#test-box-button').click(function (elem) {\r\n\r\n \tlet resultTest = $('.test-box').serializeArray(); // преобразуем форму в массив и присваеваем в переменную\r\n\r\n \tconsole.log(resultTest);\r\n\r\n \telem.preventDefault(); // прерывание отправки данных на сервер\r\n\r\n    resultTest.forEach(function (item, i) {\r\n\r\n    \tlet answer = eval(item.name);\r\n    \tquestions[answer.questionIndex].result = (answer.correct == item.value) ? true : false; // Сравнение правильности ответов\r\n    });\r\n\r\n    let testValid = true;\r\n\r\n    // Вставка результатов в модальное окно\r\n    questions.forEach(function (item, index) {\r\n    \tswitch (item.result) {\r\n      \t\tcase true:\r\n        \t\titem.result = 'Правильно';\r\n        \t\tbreak\r\n      \t\tcase false:\r\n        \t\titem.result = 'Неправильно';\r\n        \t\ttestValid = false;\r\n        \t\tbreak\r\n      \t\tcase undefined:\r\n        \t\titem.result = 'Вопрос не отвечен';\r\n        \t\ttestValid = false;\r\n        \t\tbreak\r\n      }\r\n\r\n      let tmplResult = $('#result-tmpl').html();\r\n  \t  let tmplResultInsert = _.template(tmplResult);\r\n      let html = tmplResultInsert(item);\r\n\r\n      $('.modal-list-result').append(html);\r\n    });\r\n\r\n    let html = (testValid) ? '<span class=\"result-text\">Тест пройден!</span>' : '<span class=\"result-text\">Тест не пройден</span>'\r\n    $('.modal .modal-footer').append(html);\r\n    $('.modal').show();\r\n});\r\n\r\n// Кнопка закрытие окна\r\n$('.close').click(function () {\r\n$('.modal').hide();\r\n    location.reload();\r\n});\r\n});"]}